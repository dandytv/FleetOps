using System;
using CCMS.ModelSector;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using ModelSector.Global_Resources;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web.Mvc;

namespace ModelSector
{
   public class TxnAdjustment 
    {
       [Display(Name = "transactionid", ResourceType = typeof(locale))]
       public string TxnId { get; set; }

       public CardnAccNo _CardnAccNo { get; set; }

       [Display(Name = "txncd", ResourceType=typeof(locale))]
<<<<<<< HEAD
       [RegularExpression(@"[-+]?[0-9]*\.?[0-9]?[0-9]", ErrorMessage = "Numbers only")]
=======
       //[RegularExpression(@"[-+]?[0-9]*\.?[0-9]?[0-9]", ErrorMessage = "Numbers only")]
>>>>>>> 00304fafa66f4f692b9cf9ae6b65dc20c89fc184
       public string SelectedTxnCd { get; set; }
       public IEnumerable<SelectListItem> TxnCd { get; set; }

       [Display(Name = "transactiondate", ResourceType = typeof(locale))]
       public string TxnDate { get; set; }

       [Display(Name = "totalamount", ResourceType = typeof(locale))]
       [RegularExpression(@"[-+]?[0-9]*\.?[0-9]?[0-9]", ErrorMessage = "Numbers only")]
       public decimal? TotAmnt { get; set; }

       [DisplayName("Billing Amount")]
       [RegularExpression(@"[-+]?[0-9]*\.?[0-9]?[0-9]", ErrorMessage = "Numbers only")]
       public decimal? BillingTxnAmt { get; set; }

       [Display(Name = "totalpoints", ResourceType = typeof(locale))]
       [RegularExpression(@"[-+]?[0-9]*\.?[0-9]?[0-9]", ErrorMessage = "Numbers only")]
       public decimal? Totpts { get; set; }

       [Display(Name = "descp", ResourceType = typeof(locale))]
       public string Descp { get; set; }

       [Display(Name = "invoicenumber", ResourceType = typeof(locale))]
       public string InvoiceNo { get; set; }

       [Display(Name = "collectionid", ResourceType = typeof(locale))]
       public string CollectionId { get; set; }

       [Display(Name = "referencetype", ResourceType = typeof(locale))]
       public string RefType { get; set; }

       [Display(Name = "referenceid", ResourceType = typeof(locale))]
       public string RefId { get; set; }

       [Display(Name = "userid", ResourceType = typeof(locale))]
       public string UserId { get; set; }

       [Display(Name = "creationdate", ResourceType = typeof(locale))]
       public string CreationDate { get; set; }

       [Display(Name = "endorsedby", ResourceType = typeof(locale))]
       public string EndorsedBy { get; set; }

       [Display(Name = "endorseddate", ResourceType = typeof(locale))]
       public string EndorsedDate { get; set; }

       [DisplayName("Withheld Unsettle Id")]
<<<<<<< HEAD
       [RegularExpression(@"[-+]?[0-9]*\.?[0-9]?[0-9]", ErrorMessage = "Numbers only")]
       public int? WithHeldUnsettleId { get; set; }
=======
       //[RegularExpression(@"[-+]?[0-9]*\.?[0-9]?[0-9]", ErrorMessage = "Numbers only")]
       public Int32? WithHeldUnsettleId { get; set; }
>>>>>>> 00304fafa66f4f692b9cf9ae6b65dc20c89fc184

       [DisplayName("Dealer")]
       public string DeftBusnLocation { get; set; }

       [DisplayName("Terminal Id")]
       public string DeftTermId { get; set; }

       
       [DisplayName("Cheque No")]
       [RegularExpression(@"[-+]?[0-9]*\.?[0-9]?[0-9]", ErrorMessage = "Numbers only")]
       public int?CheqNo { get; set; }


       [DisplayName("Status")]
       public string StsDescp { get; set; }
       
       public string SelectedSts { get; set; }
       public IEnumerable<SelectListItem> Sts { get; set; }
       [DisplayName("Approval Code")]
       public string AppvCd { get; set; }

    }
}

