using AutoMapper;
using CardTrend.Common.Extensions;
using CardTrend.Domain.Dto.Dealer;
using CardTrend.Domain.Dto.Merchant;
using ModelSector;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace FleetSys.Helpers
{
    public class MechSignMappingProfile : Profile
    {
        protected override void Configure()
        {
            this.CreateMap<MerchGeneralInfoDTO, MA_GeneralInfo>()
            .ForMember(d => d.BankName, m => m.Ignore())
            .ForMember(d => d.BankBranchCd, m => m.Ignore())
            .ForMember(d => d.AutoDebitInd, m => m.MapFrom(src => NumberExtensions.BoolConverter(src.AutoDebitInd)))
            .ForMember(d => d.AgrmntNo, m => m.MapFrom(src => src.AgreementNo))
            .ForMember(d => d.AgrmntDt, m => m.MapFrom(src => NumberExtensions.DateConverter(src.AgreementDate)))
            .ForMember(d => d.SelectedAffiliatedWithCorpCode, m => m.MapFrom(src => src.AffiliateWith))
            .ForMember(d => d.Msf, m => m.MapFrom(src => src.MSF.HasValue ? NumberExtensions.CustomNumberFormat(String.Format("{0:0.00}", src.MSF)) : null))
            .ForMember(d => d.PIC, m => m.MapFrom(src => src.PersonInCharge))
            .ForMember(d => d.SelectedOwnership, m => m.MapFrom(src => src.Ownership))
            .ForMember(d => d.SelectedBusnSize, m => m.MapFrom(src => src.Establishment))
            .ForMember(d => d.CoRegDate, m => m.MapFrom(src => NumberExtensions.DateConverter(src.CoRegDate)))
            .ForMember(d => d.BankDirectDebitInd, m => m.MapFrom(src => NumberExtensions.BoolConverter(src.AutoDebitInd)))
            .ForMember(d => d.SelectedBankName, m => m.MapFrom(src => src.BankName))
            .ForMember(d => d.selectedBankAccountType, m => m.MapFrom(src => src.BankAcctType))
            .ForMember(d => d.SelectedBankBranchCd, m => m.MapFrom(src => src.BankBranchCd))
            .ForMember(d => d.SelectedCurrentStatus, m => m.MapFrom(src => src.Sts))
            .ForMember(d => d.EnttId, m => m.MapFrom(src => src.EntityId))
            .ForMember(d => d.WithholdingTaxRate, m => m.MapFrom(src => src.WithholdingTaxRate.HasValue ? NumberExtensions.CustomNumberFormat(String.Format("{0:0.00}", src.WithholdingTaxRate)) : null))
            .ForMember(d => d.SelectedCycleNo, m => m.MapFrom(src => Convert.ToString(src.CycNo)))
            .ForMember(d => d.CreationDate, m => m.MapFrom(src => NumberExtensions.DateConverter(src.CreationDate)))
            .ForMember(d => d.SelectedReasonCode, m => m.MapFrom(src => src.ReasonCd))
            .ForMember(d => d.SelectedBusnModel, m => m.MapFrom(src => src.Moso))
            .ForMember(d => d.AcctNo, m => m.MapFrom(src => src.AcctNo.HasValue ? Convert.ToString(src.AcctNo) : ""))
            ;
            this.CreateMap<MerchGeneralInfoDTO, MerchantDetails>()
             .ForMember(d => d.CurrentStatus, m => m.Ignore())
             .ForMember(d => d.TxnCode, m => m.Ignore())
             .ForMember(d => d.Ownership, m => m.Ignore())
             .ForMember(d => d.MCC, m => m.Ignore())
             .ForMember(d => d.SIC, m => m.Ignore())
             .ForMember(d => d.DBACity, m => m.Ignore())
             .ForMember(d => d.DBARegion, m => m.Ignore())
             .ForMember(d => d.DBAState, m => m.Ignore())
             .ForMember(d => d.BankAcctName, m => m.Ignore())
             .ForMember(d => d.BankAcctType, m => m.Ignore())
             .ForMember(d => d.BankBranchCode, m => m.Ignore())
             .ForMember(d => d.cycNo, m => m.Ignore())
             .ForMember(d => d.ReasonCd, m => m.Ignore())
             .ForMember(d => d.PaymtMode, m => m.Ignore())
             .ForMember(d => d.BusinessName, m => m.MapFrom(src => src.BusnName))
             .ForMember(d => d.AgreementDate, m => m.MapFrom(src => NumberExtensions.DateConverter(src.AgreementDate)))
             .ForMember(d => d.AutoDebitInd, m => m.MapFrom(src => NumberExtensions.BoolConverter(src.AutoDebitInd)))
             .ForMember(d => d.PersonInCharge, m => m.MapFrom(src => src.PersonInCharge))
             .ForMember(d => d.selectedOwnershsip, m => m.MapFrom(src => src.Ownership))
             .ForMember(d => d.BusnSize, m => m.MapFrom(src => src.Establishment))
             .ForMember(d => d.SelectedSIC, m => m.MapFrom(src => src.Sic))
             .ForMember(d => d.SelectedMCC, m => m.MapFrom(src => src.Mcc))
             .ForMember(d => d.SelectedAreaCode, m => m.MapFrom(src => src.AreaCd))
             .ForMember(d => d.CoRegDate, m => m.MapFrom(src => NumberExtensions.DateConverter(src.CoRegDate)))
             .ForMember(d => d.OwnershipTrsfDate, m => m.MapFrom(src => NumberExtensions.DateConverter(src.OwnershipTrsfDate)))
             .ForMember(d => d.SelectDBARegion, m => m.MapFrom(src => src.DBARegion))
             .ForMember(d => d.SelectDBACity, m => m.MapFrom(src => src.DBACity))
             .ForMember(d => d.SelectDBAState, m => m.MapFrom(src => src.DBAState))
             .ForMember(d => d.AutoDebitInd, m => m.MapFrom(src => NumberExtensions.BoolConverter(src.AutoDebitInd)))
             .ForMember(d => d.SelectedBankAcctName, m => m.MapFrom(src => src.BankName))
             .ForMember(d => d.selectedBankAcctType, m => m.MapFrom(src => src.BankAcctType))
             .ForMember(d => d.BankAccountNo, m => m.MapFrom(src => src.BankAcctNo))
             .ForMember(d => d.SelectedBankBranchCode, m => m.MapFrom(src => src.BankBranchCd))
             .ForMember(d => d.selectedCurrentStatus, m => m.MapFrom(src => src.Sts))
             .ForMember(d => d.WithholdingTaxInd, m => m.MapFrom(src => NumberExtensions.BoolConverter(src.WithholdingTaxInd)))
             .ForMember(d => d.WithholdingTaxRate, m => m.MapFrom(src => src.WithholdingTaxRate.HasValue ? NumberExtensions.CustomNumberFormat(String.Format("{0:0.00}", src.WithholdingTaxRate)) : ""))
             .ForMember(d => d.SelectedcycNo, m => m.MapFrom(src => Convert.ToString(src.CycNo)))
             .ForMember(d => d.UserID, m => m.MapFrom(src => src.UserId))
             .ForMember(d => d.CreationDate, m => m.MapFrom(src => NumberExtensions.DateConverter(src.CreationDate)))
             .ForMember(d => d.SelectedReasonCode, m => m.MapFrom(src => src.ReasonCd))
             .ForMember(d => d.StmtPrintInd, m => m.MapFrom(src => NumberExtensions.BoolConverter((src.StmtPrint))))
             .ForMember(d => d.SiteId, m => m.MapFrom(src => src.ReconAcct))
             .ForMember(d => d.BusnLoc, m => m.MapFrom(src => src.BusnLocation))
             .ForMember(d => d.TopupAmt, m => m.MapFrom(src => src.TopUpAmt.HasValue ? NumberExtensions.CustomNumberFormat(String.Format("{0:0.00}", src.TopUpAmt)) : ""))
             .ForMember(d => d.TopupLimit, m => m.MapFrom(src => src.TopUpLimit.HasValue ? NumberExtensions.CustomNumberFormat(String.Format("{0:0.00}", src.TopUpLimit)) : ""))
             ;
            this.CreateMap<MerchantDetails, MerchGeneralInfoDTO>()
            .ForMember(d => d.Ownership, m => m.Ignore())
            .ForMember(d => d.DBACity, m => m.Ignore())
            .ForMember(d => d.DBARegion, m => m.Ignore())
            .ForMember(d => d.DBAState, m => m.Ignore())
            .ForMember(d => d.BankAcctType, m => m.Ignore())
            .ForMember(d => d.ReasonCd, m => m.Ignore())
            .ForMember(d => d.BusnName, m => m.MapFrom(src => src.BusinessName))
            .ForMember(d => d.AgreementDate, m => m.MapFrom(src => NumberExtensions.DateConverterDB(src.AgreementDate)))
            .ForMember(d => d.AutoDebitInd, m => m.MapFrom(src => NumberExtensions.ConvertBoolDB(src.AutoDebitInd)))
            .ForMember(d => d.PersonInCharge, m => m.MapFrom(src => src.PersonInCharge))
            .ForMember(d => d.Ownership, m => m.MapFrom(src => src.selectedOwnershsip))
            .ForMember(d => d.Establishment, m => m.MapFrom(src => src.BusnSize))
            .ForMember(d => d.Sic, m => m.MapFrom(src => src.SelectedSIC))
            .ForMember(d => d.AreaCd, m => m.MapFrom(src => src.SelectedAreaCode))
            .ForMember(d => d.Mcc, m => m.MapFrom(src => src.SelectedMCC))
            .ForMember(d => d.CoRegDate, m => m.MapFrom(src => NumberExtensions.DateConverterDB(src.CoRegDate)))
            .ForMember(d => d.OwnershipTrsfDate, m => m.MapFrom(src => NumberExtensions.DateConverterDB(src.OwnershipTrsfDate)))
            .ForMember(d => d.DBARegion, m => m.MapFrom(src => src.SelectDBARegion))
            .ForMember(d => d.DBACity, m => m.MapFrom(src => src.SelectDBACity))
            .ForMember(d => d.DBAState, m => m.MapFrom(src => src.SelectDBAState))
            .ForMember(d => d.AutoDebitInd, m => m.MapFrom(src => NumberExtensions.ConvertBoolDB(src.AutoDebitInd)))
            .ForMember(d => d.BankName, m => m.MapFrom(src => src.SelectedBankAcctName))
            .ForMember(d => d.BankAcctType, m => m.MapFrom(src => src.selectedBankAcctType))
            .ForMember(d => d.BankAcctNo, m => m.MapFrom(src => src.BankAccountNo))
            .ForMember(d => d.BankBranchCd, m => m.MapFrom(src => src.SelectedBankBranchCode))
            .ForMember(d => d.Sts, m => m.MapFrom(src => src.selectedCurrentStatus))
            .ForMember(d => d.WithholdingTaxInd, m => m.MapFrom(src => NumberExtensions.ConvertBoolDB(src.WithholdingTaxInd)))
            .ForMember(d => d.WithholdingTaxRate, m => m.MapFrom(src => NumberExtensions.ConvertDecimalToDb(src.WithholdingTaxRate)))
            .ForMember(d => d.CycNo, m => m.MapFrom(src => Convert.ToByte(src.SelectedcycNo)))
            .ForMember(d => d.UserId, m => m.MapFrom(src => src.UserID))
            .ForMember(d => d.CreationDate, m => m.MapFrom(src => NumberExtensions.DateConverterDB(src.CreationDate)))
            .ForMember(d => d.ReasonCd, m => m.MapFrom(src => src.SelectedReasonCode))
            .ForMember(d => d.StmtPrint, m => m.MapFrom(src => NumberExtensions.ConvertBoolDB((src.StmtPrintInd))))
            .ForMember(d => d.ReconAcct, m => m.MapFrom(src => src.SiteId))
            .ForMember(d => d.BusnLocation, m => m.MapFrom(src => src.BusnLoc))
            .ForMember(d => d.TopUpAmt, m => m.MapFrom(src => NumberExtensions.ConvertDecimalToDb( src.TopupAmt)))
            .ForMember(d => d.TopUpLimit, m => m.MapFrom(src => NumberExtensions.ConvertDecimalToDb(src.TopupLimit)))
            ;
            this.CreateMap<EServiceDTO, eService>()
            .ForMember(d => d.Siteid, m => m.MapFrom(src => src.SiteId))
            .ForMember(d => d.bankName, m => m.MapFrom(src => src.BankName))
            .ForMember(d => d.PostingDate, m => m.MapFrom(src => NumberExtensions.DateConverter(src.PrcsDate)))
            .ForMember(d => d.TxnDate, m => m.MapFrom(src => src.LocalDate))
            .ForMember(d => d.TxnTime, m => m.MapFrom(src => src.LocalTime))
            .ForMember(d => d.CardNo, m => m.MapFrom(src => Convert.ToString(src.CardNo)))
            .ForMember(d => d.RRN, m => m.MapFrom(src => Convert.ToString(src.Rrn)))
            .ForMember(d => d.Quantity, m => m.MapFrom(src => Convert.ToInt32(src.Qty)))
            .ForMember(d => d.Amount, m => m.MapFrom(src => src.BillingAmt.HasValue ? NumberExtensions.CustomNumberFormat(String.Format("{0:0.00}", src.BillingAmt)) : ""))
            .ForMember(d => d.MDR, m => m.MapFrom(src => src.BillingAmt.HasValue ? NumberExtensions.CustomNumberFormat(String.Format("{0:0.00}", src.BillingAmt)) : ""))
            .ForMember(d => d.VatAmount, m => m.MapFrom(src => src.VATAmt.HasValue ? NumberExtensions.CustomNumberFormat(String.Format("{0:0.00}", src.VATAmt)) : ""))
            .ForMember(d => d.NetAmount, m => m.MapFrom(src => src.NetAmt.HasValue ? NumberExtensions.CustomNumberFormat(String.Format("{0:0.00}", src.NetAmt)) : ""))
            ;
            this.CreateMap<BusnLocTerminalDTO, BusnLocTerminal>()
            .ForMember(d => d.ProdType, m => m.Ignore())
            .ForMember(d => d.ReasonCd, m => m.Ignore())
            .ForMember(d => d.TermType, m => m.Ignore())
            .ForMember(d => d.SelectedTermType, m => m.MapFrom(src => src.TermType))
            .ForMember(d => d.SelectedStatus, m => m.MapFrom(src => src.Status))
            .ForMember(d => d.RawStatus, m => m.MapFrom(src => src.Sts))
            .ForMember(d => d.DeployDate, m => m.MapFrom(src => NumberExtensions.DateConverter(src.DeployDate)))
            .ForMember(d => d.Replacement, m => m.MapFrom(src => src.ReplacedByTermId))
            .ForMember(d => d.ReplacedDate, m => m.MapFrom(src => NumberExtensions.DateConverter(src.ReplacedDate)))
            .ForMember(d => d.SelectedReasonCode, m => m.MapFrom(src => src.ReasonCd))
            .ForMember(d => d.IPEK, m => m.MapFrom(src => Convert.ToString(src.IPEK)))
            .ForMember(d => d.SettlementStart, m => m.MapFrom(src => NumberExtensions.DateConverter(src.SettleFromTime)))
            .ForMember(d => d.SettlementEnd, m => m.MapFrom(src => NumberExtensions.DateConverter(src.SettleToTime)))
            .ForMember(d => d.LastBatchId, m => m.MapFrom(src => Convert.ToInt32(src.LastBatchId)))
            .ForMember(d => d.SettleTxnId, m => m.MapFrom(src => Convert.ToInt32(src.SettleTxnId)))
            .ForMember(d => d.SelectedProdType, m => m.MapFrom(src => src.DeviceModel))
            .ForMember(d => d.SerialNo, m => m.MapFrom(src => src.SerialNo))
            .ForMember(d => d.Descp, m => m.MapFrom(src => src.Reason))
            .ForMember(d => d.Remarks, m => m.MapFrom(src => src.Remarks))
            .ForMember(d => d.CreationDate, m => m.MapFrom(src => NumberExtensions.DateConverter(src.CreationDate)))
            .ForMember(d => d.LastUpdDate, m => m.MapFrom(src => NumberExtensions.DateConverter(src.LastUpdDate)))
            ;
             this.CreateMap<BusnLocTerminal,BusnLocTerminalDTO>()
            .ForMember(d => d.ReasonCd, m => m.Ignore())
            .ForMember(d => d.TermType, m => m.Ignore())
            .ForMember(d => d.TermType, m => m.MapFrom(src => src.SelectedTermType))
            .ForMember(d => d.Status, m => m.MapFrom(src => src.SelectedStatus))
            .ForMember(d => d.Sts, m => m.MapFrom(src => src.RawStatus))
            .ForMember(d => d.DeployDate, m => m.MapFrom(src => NumberExtensions.ConvertDatetimeDB(src.DeployDate)))
            .ForMember(d => d.ReplacedByTermId, m => m.MapFrom(src => src.Replacement))
            .ForMember(d => d.ReplacedDate, m => m.MapFrom(src => NumberExtensions.ConvertDatetimeDB(src.ReplacedDate)))
            .ForMember(d => d.ReasonCd, m => m.MapFrom(src => src.SelectedReasonCode))
            .ForMember(d => d.IPEK, m => m.MapFrom(src => src.IPEK))
            .ForMember(d => d.SettleFromTime, m => m.MapFrom(src => NumberExtensions.ConvertDatetimeDB(src.SettlementStart)))
            .ForMember(d => d.SettleToTime, m => m.MapFrom(src => NumberExtensions.ConvertDatetimeDB(src.SettlementEnd)))
            .ForMember(d => d.LastBatchId, m => m.MapFrom(src => src.LastBatchId))
            .ForMember(d => d.SettleTxnId, m => m.MapFrom(src => Convert.ToInt64(src.SettleTxnId)))
            .ForMember(d => d.DeviceModel, m => m.MapFrom(src => src.SelectedProdType))
            .ForMember(d => d.SerialNo, m => m.MapFrom(src => src.SerialNo))
            .ForMember(d => d.Reason, m => m.MapFrom(src => src.Descp))
            .ForMember(d => d.Remarks, m => m.MapFrom(src => src.Remarks))
            .ForMember(d => d.CreationDate, m => m.MapFrom(src => NumberExtensions.ConvertDatetimeDB(src.CreationDate)))
            .ForMember(d => d.LastUpdDate, m => m.MapFrom(src => NumberExtensions.ConvertDatetimeDB(src.LastUpdDate)))
            ;
             this.CreateMap<MerchChangeOwnershipDTO, MerchChangeOwnership>()
            .ForMember(d => d.DBAState, m => m.Ignore())
            .ForMember(d => d.BankName, m => m.Ignore())
            .ForMember(d => d.BankAcctType, m => m.Ignore())
            .ForMember(d => d.CreationDate, m => m.MapFrom(src => src.CreationDate))
            .ForMember(d => d.CutoffDate, m => m.MapFrom(src => src.CutOffDate))
            .ForMember(d => d.NewSiteId, m => m.MapFrom(src => src.NewSiteId))
            .ForMember(d => d.SelectedDBAState, m => m.MapFrom(src => src.DBAState))
            .ForMember(d => d.SelectedBankName, m => m.MapFrom(src => src.BankName))
            .ForMember(d => d.SelectedBankAcctType, m => m.MapFrom(src => src.BankAcctType))
            .ForMember(d => d.ToMerchantId, m => m.MapFrom(src => src.ToMerchantID))
            .ForMember(d => d.FromMerchantId, m => m.MapFrom(src => src.FromMerchantId))
            .ForMember(d => d.SAPNo, m => m.MapFrom(src => src.SapNo))
            .ForMember(d => d.CutoffDate, m => m.MapFrom(src => src.CutOffDate))
            .ForMember(d => d.MaskedFlag, m => m.MapFrom(src => NumberExtensions.BoolConverter(src.MaskedFlag)))
            .ForMember(d => d.FloatAcctInd, m => m.MapFrom(src => NumberExtensions.BoolConverter(src.FloatAcctInd)))
            ;
             this.CreateMap<MerchChangeOwnership,MerchChangeOwnershipDTO>()
            .ForMember(d => d.DBAState, m => m.Ignore())
            .ForMember(d => d.BankName, m => m.Ignore())
            .ForMember(d => d.BankAcctType, m => m.Ignore())
            .ForMember(d => d.ToMerchantID, m => m.MapFrom(src => src.ToMerchantId))
            .ForMember(d => d.CurrentBusnNo, m => m.MapFrom(src => src.FromMerchantId))
            .ForMember(d => d.CreationDate, m => m.MapFrom(src => NumberExtensions.ConvertDatetimeDB(src.CreationDate)))
            .ForMember(d => d.CurrentBusnNo, m => m.MapFrom(src => src.FromMerchantId))
            .ForMember(d => d.CurrentSiteId, m => m.MapFrom(src => src.CurrentSiteId))
            .ForMember(d => d.CutOffDate, m => m.MapFrom(src => src.CutoffDate))
            .ForMember(d => d.FloatAcctInd, m => m.MapFrom(src => NumberExtensions.ConvertBoolDB(src.FloatAcctInd)))
            .ForMember(d => d.DBAState, m => m.MapFrom(src => src.SelectedDBAState))
            .ForMember(d => d.BankName, m => m.MapFrom(src => src.SelectedBankName))
            .ForMember(d => d.FloatAcctInd, m => m.MapFrom(src => NumberExtensions.ConvertBoolDB(src.FloatAcctInd)))
            .ForMember(d => d.BankAcctType, m => m.MapFrom(src => src.SelectedBankAcctType))
            .ForMember(d => d.SapNo, m => m.MapFrom(src => src.SAPNo))
            ;
             this.CreateMap<MerchProductPrizeDTO, MerchProductPrize>()
            .ForMember(d => d.ProdCd, m => m.Ignore())
            .ForMember(d => d.EffDateFrom, m => m.MapFrom(src => NumberExtensions.DateConverter(src.StartDate)))
            .ForMember(d => d.EffDateTo, m => m.MapFrom(src => NumberExtensions.DateConverter(src.EndDate)))
            .ForMember(d => d.Descp, m => m.MapFrom(src => src.Product))
            .ForMember(d => d.Price, m => m.MapFrom(src => src.Price.HasValue ? NumberExtensions.CustomNumberFormat(String.Format("{0:0.00}", src.Price)) : ""))
            .ForMember(d => d.CreationDate, m => m.MapFrom(src => NumberExtensions.DateConverter(src.CreationDate)))
            ;
             this.CreateMap<MerchProductPrize,MerchProductPrizeDTO>()
            .ForMember(d => d.StartDate, m => m.MapFrom(src => NumberExtensions.ConvertDatetimeDB(src.EffDateFrom)))
            .ForMember(d => d.EndDate, m => m.MapFrom(src => NumberExtensions.ConvertDatetimeDB(src.EffDateTo)))
            .ForMember(d => d.Product, m => m.MapFrom(src => src.Descp))
            .ForMember(d => d.ProdCd, m => m.MapFrom(src => src.SelectedProdCd))
            .ForMember(d => d.Price, m => m.MapFrom(src => NumberExtensions.ConvertDecimalToDb(src.Price)))
            .ForMember(d => d.CreationDate, m => m.MapFrom(src => NumberExtensions.ConvertDatetimeDB(src.CreationDate)))
            ;

             this.CreateMap<MerchAgreementGeneralInfoDTO, MA_GeneralInfo>()
            .ForMember(d => d.AcctNo, m => m.MapFrom(src => src.MerchantAccount))
            .ForMember(d => d.PIC, m => m.MapFrom(src => src.PersonInCharge))
            .ForMember(d => d.SAPNo, m => m.MapFrom(src => src.SAPNo))
            .ForMember(d => d.BusnName, m => m.MapFrom(src => src.BusinessName))
            .ForMember(d => d.SelectedAffiliatedWithCorpCode, m => m.MapFrom(src => src.AffiliatedWith))
            .ForMember(d => d.WithholdingTaxInd, m => m.MapFrom(src => src.WithholdingTaxInd))
            .ForMember(d => d.WithholdingTaxRate, m => m.MapFrom(src => NumberExtensions.ConverterDecimal(src.WithholdingTaxRate.ToString())))
            .ForMember(d => d.TaxId, m => m.MapFrom(src => src.TaxId))
            .ForMember(d => d.SelectedCurrentStatus, m => m.MapFrom(src => src.Status))
            .ForMember(d => d.CreationDate, m => m.MapFrom(src => NumberExtensions.DateConverter(src.CreationDate)))
            ;
            this.CreateMap<MA_GeneralInfo, MerchAgreementGeneralInfoDTO>()
            .ForMember(d => d.AcctNo, m => m.MapFrom(src => src.AcctNo))
            .ForMember(d => d.BusinessName, m => m.MapFrom(src => src.BusnName))
            .ForMember(d => d.AgreeNo, m => m.MapFrom(src => src.AgrmntNo))
            .ForMember(d => d.AgreeDate, m => m.MapFrom(src => NumberExtensions.DateConverterDB(src.AgrmntDt)))
            .ForMember(d => d.AffiliatedWith, m => m.MapFrom(src => src.SelectedAffiliatedWithCorpCode))
            .ForMember(d => d.SAPNo, m => m.MapFrom(src => src.SAPNo))
            .ForMember(d => d.Msf, m => m.MapFrom(src => NumberExtensions.ConvertDecimalToDb(src.Msf)))
            .ForMember(d => d.PersonInCharge, m => m.MapFrom(src => src.PIC))
            .ForMember(d => d.ReasonCd, m => m.MapFrom(src => (src.SelectedReasonCode)))
            .ForMember(d => d.Ownership, m => m.MapFrom(src => src.SelectedOwnership))
            .ForMember(d => d.Establishment, m => m.MapFrom(src => src.SelectedBusnSize))
            .ForMember(d => d.CoRegsNo, m => m.MapFrom(src => src.CoRegNo))
            .ForMember(d => d.CoRegsName, m => m.MapFrom(src => src.CoRegName))
            .ForMember(d => d.CoRegsDate, m => m.MapFrom(src => NumberExtensions.DateConverterDB(src.CoRegDate)))
            .ForMember(d => d.Moso, m => m.MapFrom(src => src.SelectedBusnModel))
            .ForMember(d => d.PayeeName, m => m.MapFrom(src => src.PayeeName))
            .ForMember(d => d.AutoDebit, m => m.MapFrom(src => src.BankDirectDebitInd))
            .ForMember(d => d.BankName, m => m.MapFrom(src => src.SelectedBankName))
            .ForMember(d => d.BankAcctType, m => m.MapFrom(src => src.selectedBankAccountType))
            .ForMember(d => d.BankAcctNo, m => m.MapFrom(src => src.BankAcctNo))
            .ForMember(d => d.BankBranchCd, m => m.MapFrom(src => src.SelectedBankBranchCd))
            .ForMember(d => d.Status, m => m.MapFrom(src => src.SelectedCurrentStatus))
            .ForMember(d => d.EntityId, m => m.MapFrom(src => src.EnttId))
            .ForMember(d => d.TaxId, m => m.MapFrom(src => src.TaxId))
            .ForMember(d => d.WithholdInd, m => m.MapFrom(src => src.WithholdingTaxInd))
            .ForMember(d => d.WithholdingTaxRate, m => m.MapFrom(src => NumberExtensions.ConvertDecimalToDb(src.WithholdingTaxRate)))
            .ForMember(d => d.CycNo, m => m.MapFrom(src => src.SelectedCycleNo))
            .ForMember(d => d.UserId, m => m.MapFrom(src => src.UserId))
            .ForMember(d => d.CreationDate, m => m.MapFrom(src => NumberExtensions.DateConverterDB(CardTrend.Common.Extensions.NumberExtensions.DateConverter(DateTime.Now))))
            ;
        }
    }
}